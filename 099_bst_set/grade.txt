Grading at 11/08/2022:20:56:35.694977
For commit ID b807c084e76f2e75ed70bdcdbaf2c0558e9368ec
Grading at Tue Nov  8 03:56:35 PM EST 2022
-----------------------------------------------
testcase 1 : Testing with BstSet<int>
...compiling...
90-tester.cpp: In function ‘int main()’:
90-tester.cpp:70:33: error: invalid new-expression of abstract class type ‘BstSet<int>’
   70 |   BSTSetTy * bmt = new BSTSetTy();
      |                                 ^
In file included from 90-tester.cpp:1:
bstset.h:11:7: note:   because the following virtual functions are pure within ‘BstSet<int>’:
   11 | class BstSet : public Set<T> {
      |       ^~~~~~
In file included from bstset.h:8,
                 from 90-tester.cpp:1:
set.h:9:16: note:     ‘bool Set<T>::contains(const T&) const [with T = int]’
    9 |   virtual bool contains(const T& key) const = 0;
      |                ^~~~~~~~
90-tester.cpp:92:36: error: invalid new-expression of abstract class type ‘BstSet<int>’
   92 |   BSTSetTy * m2 = new BSTSetTy(*bmt);
      |                                    ^
90-tester.cpp:151:26: error: invalid new-expression of abstract class type ‘BstSet<int>’
  151 |   m = bmt = new BSTSetTy();
      |                          ^
In file included from 90-tester.cpp:1:
bstset.h: In instantiation of ‘bool BstSet<T>::contains(const T&) [with T = int]’:
90-tester.cpp:113:26:   required from here
bstset.h:34:17: error: catching polymorphic type ‘class std::invalid_argument’ by value [-Werror=catch-value=]
   34 |     catch (std::invalid_argument) {
      |                 ^~~~~~~~~~~~~~~~
bstset.h: In instantiation of ‘BstSet<T>& BstSet<T>::operator=(const BstSet<T>&) [with T = int]’:
90-tester.cpp:122:10:   required from here
bstset.h:25:11: error: no matching function for call to ‘BstMap<int, int>::BstMap(BstMap<int, int>* const&)’
   25 |     set = new BstMap<T, int>(rhs.set);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from bstset.h:7,
                 from 90-tester.cpp:1:
bstmap.h:113:3: note: candidate: ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = int; V = int]’
  113 |   BstMap(const BstMap & rhs) : root(new Node()) { root->right = mycopy(rhs.root->right); }
      |   ^~~~~~
bstmap.h:113:25: note:   no known conversion for argument 1 from ‘BstMap<int, int>* const’ to ‘const BstMap<int, int>&’
  113 |   BstMap(const BstMap & rhs) : root(new Node()) { root->right = mycopy(rhs.root->right); }
      |          ~~~~~~~~~~~~~~~^~~
bstmap.h:111:3: note: candidate: ‘BstMap<K, V>::BstMap() [with K = int; V = int]’
  111 |   BstMap() : root(new Node()) {}
      |   ^~~~~~
bstmap.h:111:3: note:   candidate expects 0 arguments, 1 provided
In file included from 90-tester.cpp:1:
bstset.h: In member function ‘BstSet<T>& BstSet<T>::operator=(const BstSet<T>&) [with T = int]’:
bstset.h:26:3: error: control reaches end of non-void function [-Werror=return-type]
   26 |   }
      |   ^
cc1plus: all warnings being treated as errors
The code did not compile.  This test failed.
-----------------------------------------------
testcase 2 : Testing with BstSet<std::string>
...compiling...
90-tester.cpp: In function ‘int main()’:
90-tester.cpp:70:33: error: invalid new-expression of abstract class type ‘BstSet<std::__cxx11::basic_string<char> >’
   70 |   BSTSetTy * bmt = new BSTSetTy();
      |                                 ^
In file included from 90-tester.cpp:1:
bstset.h:11:7: note:   because the following virtual functions are pure within ‘BstSet<std::__cxx11::basic_string<char> >’:
   11 | class BstSet : public Set<T> {
      |       ^~~~~~
In file included from bstset.h:8,
                 from 90-tester.cpp:1:
set.h:9:16: note:     ‘bool Set<T>::contains(const T&) const [with T = std::__cxx11::basic_string<char>]’
    9 |   virtual bool contains(const T& key) const = 0;
      |                ^~~~~~~~
90-tester.cpp:92:36: error: invalid new-expression of abstract class type ‘BstSet<std::__cxx11::basic_string<char> >’
   92 |   BSTSetTy * m2 = new BSTSetTy(*bmt);
      |                                    ^
90-tester.cpp:151:26: error: invalid new-expression of abstract class type ‘BstSet<std::__cxx11::basic_string<char> >’
  151 |   m = bmt = new BSTSetTy();
      |                          ^
In file included from 90-tester.cpp:1:
bstset.h: In instantiation of ‘bool BstSet<T>::contains(const T&) [with T = std::__cxx11::basic_string<char>]’:
90-tester.cpp:113:26:   required from here
bstset.h:34:17: error: catching polymorphic type ‘class std::invalid_argument’ by value [-Werror=catch-value=]
   34 |     catch (std::invalid_argument) {
      |                 ^~~~~~~~~~~~~~~~
bstset.h: In instantiation of ‘BstSet<T>& BstSet<T>::operator=(const BstSet<T>&) [with T = std::__cxx11::basic_string<char>]’:
90-tester.cpp:122:10:   required from here
bstset.h:25:11: error: no matching function for call to ‘BstMap<std::__cxx11::basic_string<char>, int>::BstMap(BstMap<std::__cxx11::basic_string<char>, int>* const&)’
   25 |     set = new BstMap<T, int>(rhs.set);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from bstset.h:7,
                 from 90-tester.cpp:1:
bstmap.h:113:3: note: candidate: ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = std::__cxx11::basic_string<char>; V = int]’
  113 |   BstMap(const BstMap & rhs) : root(new Node()) { root->right = mycopy(rhs.root->right); }
      |   ^~~~~~
bstmap.h:113:25: note:   no known conversion for argument 1 from ‘BstMap<std::__cxx11::basic_string<char>, int>* const’ to ‘const BstMap<std::__cxx11::basic_string<char>, int>&’
  113 |   BstMap(const BstMap & rhs) : root(new Node()) { root->right = mycopy(rhs.root->right); }
      |          ~~~~~~~~~~~~~~~^~~
bstmap.h:111:3: note: candidate: ‘BstMap<K, V>::BstMap() [with K = std::__cxx11::basic_string<char>; V = int]’
  111 |   BstMap() : root(new Node()) {}
      |   ^~~~~~
bstmap.h:111:3: note:   candidate expects 0 arguments, 1 provided
In file included from 90-tester.cpp:1:
bstset.h: In member function ‘BstSet<T>& BstSet<T>::operator=(const BstSet<T>&) [with T = std::__cxx11::basic_string<char>]’:
bstset.h:26:3: error: control reaches end of non-void function [-Werror=return-type]
   26 |   }
      |   ^
cc1plus: all warnings being treated as errors
The code did not compile.  This test failed.
-----------------------------------------------
testcase 3 : Testing with BstSet<(a custom class we wrote)>
...compiling...
90-tester.cpp: In function ‘int main()’:
90-tester.cpp:70:33: error: invalid new-expression of abstract class type ‘BstSet<Tester>’
   70 |   BSTSetTy * bmt = new BSTSetTy();
      |                                 ^
In file included from 90-tester.cpp:1:
bstset.h:11:7: note:   because the following virtual functions are pure within ‘BstSet<Tester>’:
   11 | class BstSet : public Set<T> {
      |       ^~~~~~
In file included from bstset.h:8,
                 from 90-tester.cpp:1:
set.h:9:16: note:     ‘bool Set<T>::contains(const T&) const [with T = Tester]’
    9 |   virtual bool contains(const T& key) const = 0;
      |                ^~~~~~~~
90-tester.cpp:92:36: error: invalid new-expression of abstract class type ‘BstSet<Tester>’
   92 |   BSTSetTy * m2 = new BSTSetTy(*bmt);
      |                                    ^
90-tester.cpp:151:26: error: invalid new-expression of abstract class type ‘BstSet<Tester>’
  151 |   m = bmt = new BSTSetTy();
      |                          ^
In file included from 90-tester.cpp:1:
bstset.h: In instantiation of ‘bool BstSet<T>::contains(const T&) [with T = Tester]’:
90-tester.cpp:113:26:   required from here
bstset.h:34:17: error: catching polymorphic type ‘class std::invalid_argument’ by value [-Werror=catch-value=]
   34 |     catch (std::invalid_argument) {
      |                 ^~~~~~~~~~~~~~~~
bstset.h: In instantiation of ‘BstSet<T>& BstSet<T>::operator=(const BstSet<T>&) [with T = Tester]’:
90-tester.cpp:122:10:   required from here
bstset.h:25:11: error: no matching function for call to ‘BstMap<Tester, int>::BstMap(BstMap<Tester, int>* const&)’
   25 |     set = new BstMap<T, int>(rhs.set);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from bstset.h:7,
                 from 90-tester.cpp:1:
bstmap.h:113:3: note: candidate: ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = Tester; V = int]’
  113 |   BstMap(const BstMap & rhs) : root(new Node()) { root->right = mycopy(rhs.root->right); }
      |   ^~~~~~
bstmap.h:113:25: note:   no known conversion for argument 1 from ‘BstMap<Tester, int>* const’ to ‘const BstMap<Tester, int>&’
  113 |   BstMap(const BstMap & rhs) : root(new Node()) { root->right = mycopy(rhs.root->right); }
      |          ~~~~~~~~~~~~~~~^~~
bstmap.h:111:3: note: candidate: ‘BstMap<K, V>::BstMap() [with K = Tester; V = int]’
  111 |   BstMap() : root(new Node()) {}
      |   ^~~~~~
bstmap.h:111:3: note:   candidate expects 0 arguments, 1 provided
In file included from 90-tester.cpp:1:
bstset.h: In member function ‘BstSet<T>& BstSet<T>::operator=(const BstSet<T>&) [with T = Tester]’:
bstset.h:26:3: error: control reaches end of non-void function [-Werror=return-type]
   26 |   }
      |   ^
cc1plus: all warnings being treated as errors
The code did not compile.  This test failed.

Overall Grade: F
