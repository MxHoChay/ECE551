Grading at 12/05/2022:21:33:54.674269
For commit ID 87b601e9cce659d97db06c1d01214064b731bc98
Grading at Mon Dec  5 04:33:44 PM EST 2022
Doing some basic checking for your submission

Step 1
Checking that cyoa-step1 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3 cyoa-step4  cyoa-step1.o  cyoa-step2.o  cyoa-step3.o  cyoa-step4.o
g++ -std=gnu++98 -Werror -Wall -pedantic -ggdb3 -c cyoa-step1.cpp
g++ -o cyoa-step1 cyoa-step1.o
rm cyoa-step1.o
The code compiled (good)
Executable cyoa-step1 exists (good)
------------------------------------
Now running YOUR tests for step 1
------------------------------------


1.1: Current test is ./cyoa-step1 numfault1 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
terminate called after throwing an instance of 'InvalidInputLine'
  what():  Invalid input line!

timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.2: Current test is ./cyoa-step1 numfault2 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
terminate called after throwing an instance of 'InvalidInputLine'
  what():  Invalid input line!

timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.3: Current test is ./cyoa-step1 numfault3 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
terminate called after throwing an instance of 'NumOutOfRange'
  what():  Number out of range!

timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.4: Current test is ./cyoa-step1 goodstory < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 1

Step 2
Checking that cyoa-step2 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3 cyoa-step4  cyoa-step1.o  cyoa-step2.o  cyoa-step3.o  cyoa-step4.o
g++ -std=gnu++98 -Werror -Wall -pedantic -ggdb3 -c cyoa-step2.cpp
g++ -o cyoa-step2 cyoa-step2.o
rm cyoa-step2.o
The code compiled (good)
Executable cyoa-step2 exists (good)
------------------------------------
Now running YOUR tests for step 2
------------------------------------


2.1: Current test is ./cyoa-step2 /usr/local/ece551/cyoa/story1  <  ./input1.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 2

Step 3
Checking that cyoa-step3 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3 cyoa-step4  cyoa-step1.o  cyoa-step2.o  cyoa-step3.o  cyoa-step4.o
g++ -std=gnu++98 -Werror -Wall -pedantic -ggdb3 -c cyoa-step3.cpp
g++ -o cyoa-step3 cyoa-step3.o
rm cyoa-step3.o
The code compiled (good)
Executable cyoa-step3 exists (good)
------------------------------------
Now running YOUR tests for step 3
------------------------------------


3.1: Current test is ./cyoa-step3 goodstory < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 3

Step 4
Checking that cyoa-step4 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3 cyoa-step4  cyoa-step1.o  cyoa-step2.o  cyoa-step3.o  cyoa-step4.o
g++ -std=gnu++98 -Werror -Wall -pedantic -ggdb3 -c cyoa-step4.cpp
g++ -o cyoa-step4 cyoa-step4.o
rm cyoa-step4.o
The code compiled (good)
Executable cyoa-step4 exists (good)
------------------------------------
Now running YOUR tests for step 4
------------------------------------
No request to check for intermediate deadline completion on step 4

You have passed the test cases YOU provided
If your tests are good, this is great. 
If your tests are insufficient, you should do much more testing

Overall Grade: NO GRADE YET
