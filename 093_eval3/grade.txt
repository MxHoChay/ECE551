Grading at 11/17/2022:17:16:30.538923
For commit ID 1c73a45346c264ff3bc33203d4e7fa499880d242
Grading at Thu Nov 17 12:16:10 PM EST 2022
Doing some basic checking for your submission

Step 1
Checking that cyoa-step1 compiles
make: 'cyoa-step1' is up to date.
The code compiled (good)
Executable cyoa-step1 exists (good)
------------------------------------
Now running YOUR tests for step 1
------------------------------------


1.1: Current test is ./cyoa-step1 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.2: Current test is ./cyoa-step1 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 1

Step 2
Checking that cyoa-step2 compiles
make: 'cyoa-step2' is up to date.
The code compiled (good)
Executable cyoa-step2 exists (good)
------------------------------------
Now running YOUR tests for step 2
------------------------------------


2.1: Current test is ./cyoa-step2 story1  <  ./story1/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind reported errors
Valgrind reported errors or memory leaks:
==56827== Memcheck, a memory error detector
==56827== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==56827== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==56827== Command: ./cyoa-step2 story1
==56827== Parent PID: 56826
==56827== 
==56827== Conditional jump or move depends on uninitialised value(s)
==56827==    at 0x4B2D180: getdelim (iogetdelim.c:59)
==56827==    by 0x10E218: main (cyoa-step2.cpp:19)
==56827== 
==56827== 
==56827== HEAP SUMMARY:
==56827==     in use at exit: 15,282 bytes in 35 blocks
==56827==   total heap usage: 180,260 allocs, 180,225 frees, 1,042,271 bytes allocated
==56827== 
==56827== LEAK SUMMARY:
==56827==    definitely lost: 0 bytes in 0 blocks
==56827==    indirectly lost: 0 bytes in 0 blocks
==56827==      possibly lost: 0 bytes in 0 blocks
==56827==    still reachable: 15,282 bytes in 35 blocks
==56827==         suppressed: 0 bytes in 0 blocks
==56827== Reachable blocks (those to which a pointer was found) are not shown.
==56827== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==56827== 
==56827== Use --track-origins=yes to see where uninitialised values come from
==56827== For lists of detected and suppressed errors, rerun with: -s
==56827== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
No request to check for intermediate deadline completion on step 2

Step 3
Checking that cyoa-step3 compiles
make: 'cyoa-step3' is up to date.
The code compiled (good)
Executable cyoa-step3 exists (good)
------------------------------------
Now running YOUR tests for step 3
------------------------------------


3.1: Current test is ./cyoa-step3 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 3

Step 4
Checking that cyoa-step4 compiles
make: 'cyoa-step4' is up to date.
The code compiled (good)
Executable cyoa-step4 exists (good)
------------------------------------
Now running YOUR tests for step 4
------------------------------------


4.1: Current test is ./cyoa-step4 story3  <  ./story3/inputs/input2.txt
-----------------------------
You considered this a failure case:
timeout: the monitored command dumped core
But we did not.
No request to check for intermediate deadline completion on step 4

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
