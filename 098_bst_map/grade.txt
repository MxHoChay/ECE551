Grading at 11/08/2022:08:38:22.084725
For commit ID 8cec938de8bf697804921a5d5172f8c52ee17fe3
Grading at Tue Nov  8 03:38:20 AM EST 2022
-----------------------------------------------
testcase 1 : Testing with BstMap<int,int>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = int; V = int]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<int, int>::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.
-----------------------------------------------
testcase 2 : Testing with BstMap<int,std::string>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = int; V = std::__cxx11::basic_string<char>]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<int, std::__cxx11::basic_string<char> >::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.
-----------------------------------------------
testcase 3 : Testing with BstMap<int,(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = int; V = Tester]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<int, Tester>::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.
-----------------------------------------------
testcase 4 : Testing with BstMap<std::string,int>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = std::__cxx11::basic_string<char>; V = int]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<std::__cxx11::basic_string<char>, int>::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.
-----------------------------------------------
testcase 5 : Testing with BstMap<std::string,std::string>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = std::__cxx11::basic_string<char>; V = std::__cxx11::basic_string<char>]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.
-----------------------------------------------
testcase 6 : Testing with BstMap<std::string,(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = std::__cxx11::basic_string<char>; V = Tester]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<std::__cxx11::basic_string<char>, Tester>::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.
-----------------------------------------------
testcase 7 : Testing with BstMap<(a custom class we wrote),int>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = Tester; V = int]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<Tester, int>::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.
-----------------------------------------------
testcase 8 : Testing with BstMap<(a custom class we wrote),std::string>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = Tester; V = std::__cxx11::basic_string<char>]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<Tester, std::__cxx11::basic_string<char> >::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.
-----------------------------------------------
testcase 9 : Testing with BstMap<(a custom class we wrote),(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In constructor ‘BstMap<K, V>::BstMap()’:
bstmap.h:99:19: error: there are no arguments to ‘malloc’ that depend on a template parameter, so a declaration of ‘malloc’ must be available [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ^~~~~~
bstmap.h:99:19: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
bstmap.h: In instantiation of ‘BstMap<K, V>::BstMap() [with K = Tester; V = Tester]’:
89-tester.cpp:70:33:   required from here
bstmap.h:99:25: error: ‘malloc’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/cstdlib:75,
                 from /usr/include/c++/11/stdlib.h:36,
                 from 89-tester.cpp:2:
/usr/include/stdlib.h:540:14: note: ‘void* malloc(size_t)’ declared here, later in the translation unit
  540 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
In file included from 89-tester.cpp:1:
bstmap.h:99:25: error: invalid conversion from ‘void*’ to ‘BstMap<Tester, Tester>::Node**’ [-fpermissive]
   99 |   BstMap() : root(malloc(sizeof(*root))) { *root = NULL; }
      |                   ~~~~~~^~~~~~~~~~~~~~~
      |                         |
      |                         void*
The code did not compile.  This test failed.

Overall Grade: F
